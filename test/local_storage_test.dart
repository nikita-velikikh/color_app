// ignore_for_file: avoid_print

// –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
import 'package:flutter/material.dart'; // –î–ª—è —Ä–∞–±–æ—Ç—ã —Å —Ü–≤–µ—Ç–∞–º–∏ Flutter
import 'package:flutter_test/flutter_test.dart'; // –û—Å–Ω–æ–≤–Ω–∞—è –±–∏–±–ª–∏–æ—Ç–µ–∫–∞ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è Flutter
import 'package:shared_preferences/shared_preferences.dart'; // –î–ª—è —Ä–∞–±–æ—Ç—ã —Å SharedPreferences

// –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –Ω–∞—à —Å–µ—Ä–≤–∏—Å, –∫–æ—Ç–æ—Ä—ã–π –º—ã —Ç–µ—Å—Ç–∏—Ä—É–µ–º
import 'package:color_aap/src/local_service.dart';

void main() {
  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è binding –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–π —Ä–∞–±–æ—Ç—ã –ø–ª–∞–≥–∏–Ω–æ–≤
  TestWidgetsFlutterBinding.ensureInitialized();

  // –ì—Ä—É–ø–ø–∞ —Ç–µ—Å—Ç–æ–≤ –¥–ª—è LocalStorageService
  // group() –ø–æ–∑–≤–æ–ª—è–µ—Ç –æ—Ä–≥–∞–Ω–∏–∑–æ–≤–∞—Ç—å —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Ç–µ—Å—Ç—ã –≤ –ª–æ–≥–∏—á–µ—Å–∫–∏–µ –±–ª–æ–∫–∏
  group('LocalStorageService Tests', () {
    // –í—ã–≤–æ–¥–∏–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –Ω–∞—á–∞–ª–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    setUpAll(() {
      print('üöÄ –ù–∞—á–∏–Ω–∞–µ–º —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ LocalStorageService...');
    });

    // –ì—Ä—É–ø–ø–∞ —Ç–µ—Å—Ç–æ–≤ –¥–ª—è –º–µ—Ç–æ–¥–∞ saveUserColors
    group('saveUserColors', () {
      // –¢–µ—Å—Ç: –ø—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ü–≤–µ—Ç–∞ —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è –≤ SharedPreferences
      test('–¥–æ–ª–∂–µ–Ω —Å–æ—Ö—Ä–∞–Ω—è—Ç—å —Ü–≤–µ—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ SharedPreferences', () async {
        // –í—ã–≤–æ–¥–∏–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –Ω–∞—á–∞–ª–µ —Ç–µ—Å—Ç–∞
        print('üé® –¢–µ—Å—Ç: –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ü–≤–µ—Ç–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');
        
        // Arrange (–ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞) - —Å–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
        const testColors = {
          'backgroundColor': Colors.red,    // –ö—Ä–∞—Å–Ω—ã–π —Ü–≤–µ—Ç –¥–ª—è —Ñ–æ–Ω–∞
          'appBarColor': Colors.blue,       // –°–∏–Ω–∏–π —Ü–≤–µ—Ç –¥–ª—è app bar
          'textColor': Colors.green,        // –ó–µ–ª–µ–Ω—ã–π —Ü–≤–µ—Ç –¥–ª—è —Ç–µ–∫—Å—Ç–∞
        };
        print('üìù –¢–µ—Å—Ç–æ–≤—ã–µ —Ü–≤–µ—Ç–∞: –§–æ–Ω=${testColors['backgroundColor']}, AppBar=${testColors['appBarColor']}, –¢–µ–∫—Å—Ç=${testColors['textColor']}');

        // Act (–î–µ–π—Å—Ç–≤–∏–µ) - –≤—ã–∑—ã–≤–∞–µ–º —Ç–µ—Å—Ç–∏—Ä—É–µ–º—ã–π –º–µ—Ç–æ–¥
        print('‚ö° –í—ã–∑—ã–≤–∞–µ–º LocalStorageService.saveUserColors()...');
        await LocalStorageService.saveUserColors(
          backgroundColor: testColors['backgroundColor']!,
          appBarColor: testColors['appBarColor']!,
          textColor: testColors['textColor']!,
        );
        print('‚úÖ –ú–µ—Ç–æ–¥ saveUserColors() –≤—ã–ø–æ–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ');

        // Assert (–ü—Ä–æ–≤–µ—Ä–∫–∞) - –ø—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –¥–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω–∏–ª–∏—Å—å
        print('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –¥–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω–∏–ª–∏—Å—å...');
        final prefs = await SharedPreferences.getInstance();
        final savedData = prefs.getString('user_colors');
        print('üìÑ –°–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ: $savedData');
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –¥–∞–Ω–Ω—ã–µ –Ω–µ null –∏ —Å–æ–¥–µ—Ä–∂–∞—Ç –æ–∂–∏–¥–∞–µ–º—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è
        expect(savedData, isNotNull);
        print('‚úÖ –î–∞–Ω–Ω—ã–µ –Ω–µ null');
        
        expect(savedData, contains('test@gmail.com')); // –î–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å email
        print('‚úÖ Email "test@gmail.com" –Ω–∞–π–¥–µ–Ω –≤ –¥–∞–Ω–Ω—ã—Ö');
        
        expect(savedData, contains('backgroundColor')); // –î–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å –∫–ª—é—á —Ü–≤–µ—Ç–∞ —Ñ–æ–Ω–∞
        expect(savedData, contains('appBarColor')); // –î–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å –∫–ª—é—á —Ü–≤–µ—Ç–∞ app bar
        expect(savedData, contains('textColor')); // –î–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å –∫–ª—é—á —Ü–≤–µ—Ç–∞ —Ç–µ–∫—Å—Ç–∞
        print('‚úÖ –í—Å–µ –∫–ª—é—á–∏ —Ü–≤–µ—Ç–æ–≤ –Ω–∞–π–¥–µ–Ω—ã –≤ –¥–∞–Ω–Ω—ã—Ö');
        
        print('üéâ –¢–µ—Å—Ç "–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ü–≤–µ—Ç–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è" –ø—Ä–æ–π–¥–µ–Ω —É—Å–ø–µ—à–Ω–æ!');
      });

      // –¢–µ—Å—Ç: –ø—Ä–æ–≤–µ—Ä—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö —Ü–≤–µ—Ç–æ–≤
      test('–¥–æ–ª–∂–µ–Ω –æ–±–Ω–æ–≤–ª—è—Ç—å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —Ü–≤–µ—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è', () async {
        // –í—ã–≤–æ–¥–∏–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –Ω–∞—á–∞–ª–µ —Ç–µ—Å—Ç–∞
        print('üîÑ –¢–µ—Å—Ç: –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö —Ü–≤–µ—Ç–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');
        
        // Act - –≤—ã–∑—ã–≤–∞–µ–º –º–µ—Ç–æ–¥ —Å –Ω–æ–≤—ã–º–∏ —Ü–≤–µ—Ç–∞–º–∏
        print('‚ö° –í—ã–∑—ã–≤–∞–µ–º LocalStorageService.saveUserColors() —Å –Ω–æ–≤—ã–º–∏ —Ü–≤–µ—Ç–∞–º–∏...');
        await LocalStorageService.saveUserColors(
          backgroundColor: Colors.yellow,  // –ù–æ–≤—ã–π —Ü–≤–µ—Ç —Ñ–æ–Ω–∞
          appBarColor: Colors.purple,      // –ù–æ–≤—ã–π —Ü–≤–µ—Ç app bar
          textColor: Colors.orange,        // –ù–æ–≤—ã–π —Ü–≤–µ—Ç —Ç–µ–∫—Å—Ç–∞
        );
        print('‚úÖ –ú–µ—Ç–æ–¥ saveUserColors() –≤—ã–ø–æ–ª–Ω–µ–Ω —Å –Ω–æ–≤—ã–º–∏ —Ü–≤–µ—Ç–∞–º–∏');

        // Assert - –ø—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –¥–∞–Ω–Ω—ã–µ –±—ã–ª–∏ –æ–±–Ω–æ–≤–ª–µ–Ω—ã
        print('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –¥–∞–Ω–Ω—ã–µ –±—ã–ª–∏ –æ–±–Ω–æ–≤–ª–µ–Ω—ã...');
        final prefs = await SharedPreferences.getInstance();
        final savedData = prefs.getString('user_colors');
        print('üìÑ –û–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ: $savedData');
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –Ω–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ —Å–æ–¥–µ—Ä–∂–∞—Ç –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –∫–ª—é—á–∏
        print('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –≤—Å–µ—Ö –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –∫–ª—é—á–µ–π –≤ –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö...');
        expect(savedData, isNotNull);
        expect(savedData, contains('test@gmail.com'));
        expect(savedData, contains('backgroundColor'));
        expect(savedData, contains('appBarColor'));
        expect(savedData, contains('textColor'));
        print('‚úÖ –í—Å–µ –∫–ª—é—á–∏ –Ω–∞–π–¥–µ–Ω—ã –≤ –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö');
        
        print('üéâ –¢–µ—Å—Ç "–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö —Ü–≤–µ—Ç–æ–≤" –ø—Ä–æ–π–¥–µ–Ω —É—Å–ø–µ—à–Ω–æ!');
      });
    });

    // –ì—Ä—É–ø–ø–∞ —Ç–µ—Å—Ç–æ–≤ –¥–ª—è –º–µ—Ç–æ–¥–∞ loadUserColors
    group('loadUserColors', () {
      // –¢–µ—Å—Ç: –ø—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–≥—Ä—É–∑–∫—É —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö —Ü–≤–µ—Ç–æ–≤
      test('–¥–æ–ª–∂–µ–Ω –∑–∞–≥—Ä—É–∂–∞—Ç—å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ —Ü–≤–µ—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è', () async {
        // –í—ã–≤–æ–¥–∏–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –Ω–∞—á–∞–ª–µ —Ç–µ—Å—Ç–∞
        print('üì• –¢–µ—Å—Ç: –ó–∞–≥—Ä—É–∑–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö —Ü–≤–µ—Ç–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');
        
        // Act - –≤—ã–∑—ã–≤–∞–µ–º –º–µ—Ç–æ–¥ –∑–∞–≥—Ä—É–∑–∫–∏ —Ü–≤–µ—Ç–æ–≤
        print('‚ö° –í—ã–∑—ã–≤–∞–µ–º LocalStorageService.loadUserColors()...');
        final result = await LocalStorageService.loadUserColors();
        print('‚úÖ –ú–µ—Ç–æ–¥ loadUserColors() –≤—ã–ø–æ–ª–Ω–µ–Ω, –ø–æ–ª—É—á–µ–Ω —Ä–µ–∑—É–ª—å—Ç–∞—Ç: $result');

        // Assert - –ø—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∑–∞–≥—Ä—É–∑–∏–ª–∏—Å—å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ —Ü–≤–µ—Ç–∞
        print('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∑–∞–≥—Ä—É–∑–∏–ª–∏—Å—å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ —Ü–≤–µ—Ç–∞...');
        expect(result, isNotNull); // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –Ω–µ null
        print('‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç –Ω–µ null');
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤—Å–µ —Ü–≤–µ—Ç–∞ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—Ç
        expect(result!.containsKey('backgroundColor'), isTrue);
        expect(result.containsKey('appBarColor'), isTrue);
        expect(result.containsKey('textColor'), isTrue);
        print('‚úÖ –í—Å–µ –∫–ª—é—á–∏ —Ü–≤–µ—Ç–æ–≤ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—Ç');
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ü–≤–µ—Ç–∞ —è–≤–ª—è—é—Ç—Å—è –æ–±—ä–µ–∫—Ç–∞–º–∏ Color
        expect(result['backgroundColor'], isA<Color>());
        expect(result['appBarColor'], isA<Color>());
        expect(result['textColor'], isA<Color>());
        print('‚úÖ –í—Å–µ –∑–Ω–∞—á–µ–Ω–∏—è —è–≤–ª—è—é—Ç—Å—è –æ–±—ä–µ–∫—Ç–∞–º–∏ Color');
        
        print('üéâ –¢–µ—Å—Ç "–ó–∞–≥—Ä—É–∑–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö —Ü–≤–µ—Ç–æ–≤" –ø—Ä–æ–π–¥–µ–Ω —É—Å–ø–µ—à–Ω–æ!');
      });

      // –¢–µ—Å—Ç: –ø—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–±–æ—Ç—É —Å –∫–∞—Å—Ç–æ–º–Ω—ã–º email
      test('–¥–æ–ª–∂–µ–Ω —Ä–∞–±–æ—Ç–∞—Ç—å —Å –∫–∞—Å—Ç–æ–º–Ω—ã–º email', () async {
        // –í—ã–≤–æ–¥–∏–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –Ω–∞—á–∞–ª–µ —Ç–µ—Å—Ç–∞
        print('üìß –¢–µ—Å—Ç: –†–∞–±–æ—Ç–∞ —Å –∫–∞—Å—Ç–æ–º–Ω—ã–º email');
        
        // –°–Ω–∞—á–∞–ª–∞ —Å–æ—Ö—Ä–∞–Ω—è–µ–º —Ü–≤–µ—Ç–∞ –¥–ª—è –∫–∞—Å—Ç–æ–º–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        print('‚ö° –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ü–≤–µ—Ç–∞ –¥–ª—è custom@gmail.com...');
        await LocalStorageService.saveUserColors(
          backgroundColor: Colors.yellow,
          appBarColor: Colors.purple,
          textColor: Colors.orange,
          email: 'custom@gmail.com',
        );
        print('‚úÖ –¶–≤–µ—Ç–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –¥–ª—è custom@gmail.com');

        // Act - –≤—ã–∑—ã–≤–∞–µ–º –º–µ—Ç–æ–¥ —Å –∫–∞—Å—Ç–æ–º–Ω—ã–º email
        print('‚ö° –í—ã–∑—ã–≤–∞–µ–º LocalStorageService.loadUserColors(email: "custom@gmail.com")...');
        final result = await LocalStorageService.loadUserColors(email: 'custom@gmail.com');
        print('‚úÖ –ú–µ—Ç–æ–¥ loadUserColors() –≤—ã–ø–æ–ª–Ω–µ–Ω, –ø–æ–ª—É—á–µ–Ω —Ä–µ–∑—É–ª—å—Ç–∞—Ç: $result');

        // Assert - –ø—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∑–∞–≥—Ä—É–∑–∏–ª–∏—Å—å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ —Ü–≤–µ—Ç–∞ –¥–ª—è –∫–∞—Å—Ç–æ–º–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        print('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∑–∞–≥—Ä—É–∑–∏–ª–∏—Å—å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ —Ü–≤–µ—Ç–∞ –¥–ª—è –∫–∞—Å—Ç–æ–º–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...');
        expect(result, isNotNull); // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –Ω–µ null
        print('‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç –Ω–µ null');
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤—Å–µ —Ü–≤–µ—Ç–∞ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—Ç
        expect(result!.containsKey('backgroundColor'), isTrue);
        expect(result.containsKey('appBarColor'), isTrue);
        expect(result.containsKey('textColor'), isTrue);
        print('‚úÖ –í—Å–µ –∫–ª—é—á–∏ —Ü–≤–µ—Ç–æ–≤ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—Ç');
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ü–≤–µ—Ç–∞ —è–≤–ª—è—é—Ç—Å—è –æ–±—ä–µ–∫—Ç–∞–º–∏ Color
        expect(result['backgroundColor'], isA<Color>());
        expect(result['appBarColor'], isA<Color>());
        expect(result['textColor'], isA<Color>());
        print('‚úÖ –í—Å–µ –∑–Ω–∞—á–µ–Ω–∏—è —è–≤–ª—è—é—Ç—Å—è –æ–±—ä–µ–∫—Ç–∞–º–∏ Color');
        
        print('üéâ –¢–µ—Å—Ç "–†–∞–±–æ—Ç–∞ —Å –∫–∞—Å—Ç–æ–º–Ω—ã–º email" –ø—Ä–æ–π–¥–µ–Ω —É—Å–ø–µ—à–Ω–æ!');
      });
    });

    // –ì—Ä—É–ø–ø–∞ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–æ–Ω–Ω—ã—Ö —Ç–µ—Å—Ç–æ–≤
    // –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–≤–µ—Ä—è—é—Ç –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ –º–µ–∂–¥—É –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞–º–∏
    group('–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ç–µ—Å—Ç—ã', () {
      // –¢–µ—Å—Ç: –ø—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–ª–Ω—ã–π —Ü–∏–∫–ª —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∏ –∑–∞–≥—Ä—É–∑–∫–∏
      test('–¥–æ–ª–∂–µ–Ω —Å–æ—Ö—Ä–∞–Ω—è—Ç—å –∏ –∑–∞–≥—Ä—É–∂–∞—Ç—å —Ü–≤–µ—Ç–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ', () async {
        // –í—ã–≤–æ–¥–∏–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –Ω–∞—á–∞–ª–µ —Ç–µ—Å—Ç–∞
        print('üîÑ –¢–µ—Å—Ç: –ü–æ–ª–Ω—ã–π —Ü–∏–∫–ª —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∏ –∑–∞–≥—Ä—É–∑–∫–∏ —Ü–≤–µ—Ç–æ–≤');
        
        // –û—á–∏—â–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–µ—Ä–µ–¥ —Ç–µ—Å—Ç–æ–º
        final prefs = await SharedPreferences.getInstance();
        await prefs.remove('user_colors');
        print('üßπ –î–∞–Ω–Ω—ã–µ –æ—á–∏—â–µ–Ω—ã –ø–µ—Ä–µ–¥ —Ç–µ—Å—Ç–æ–º');

        // Act - —Å–æ—Ö—Ä–∞–Ω—è–µ–º —Ü–≤–µ—Ç–∞
        print('‚ö° –í—ã–∑—ã–≤–∞–µ–º LocalStorageService.saveUserColors() –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Ü–≤–µ—Ç–æ–≤...');
        await LocalStorageService.saveUserColors(
          backgroundColor: Colors.pink,   // –†–æ–∑–æ–≤—ã–π —Ñ–æ–Ω
          appBarColor: Colors.cyan,       // –ì–æ–ª—É–±–æ–π app bar
          textColor: Colors.brown,        // –ö–æ—Ä–∏—á–Ω–µ–≤—ã–π —Ç–µ–∫—Å—Ç
        );
        print('‚úÖ –¶–≤–µ—Ç–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã: –§–æ–Ω=Colors.pink, AppBar=Colors.cyan, –¢–µ–∫—Å—Ç=Colors.brown');

        // Act - –∑–∞–≥—Ä—É–∂–∞–µ–º —Ü–≤–µ—Ç–∞
        print('‚ö° –í—ã–∑—ã–≤–∞–µ–º LocalStorageService.loadUserColors() –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ü–≤–µ—Ç–æ–≤...');
        final loadedColors = await LocalStorageService.loadUserColors();
        print('‚úÖ –¶–≤–µ—Ç–∞ –∑–∞–≥—Ä—É–∂–µ–Ω—ã: $loadedColors');

        // Assert - –ø—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–µ —Ü–≤–µ—Ç–∞ —Å–æ–≤–ø–∞–¥–∞—é—Ç —Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–º–∏
        print('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–µ —Ü–≤–µ—Ç–∞ —Å–æ–≤–ø–∞–¥–∞—é—Ç —Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–º–∏...');
        expect(loadedColors, isNotNull); // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –Ω–µ null
        print('‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç –Ω–µ null');
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤—Å–µ —Ü–≤–µ—Ç–∞ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—Ç
        expect(loadedColors!.containsKey('backgroundColor'), isTrue);
        expect(loadedColors.containsKey('appBarColor'), isTrue);
        expect(loadedColors.containsKey('textColor'), isTrue);
        print('‚úÖ –í—Å–µ –∫–ª—é—á–∏ —Ü–≤–µ—Ç–æ–≤ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—Ç');
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ü–≤–µ—Ç–∞ —è–≤–ª—è—é—Ç—Å—è –æ–±—ä–µ–∫—Ç–∞–º–∏ Color
        expect(loadedColors['backgroundColor'], isA<Color>());
        expect(loadedColors['appBarColor'], isA<Color>());
        expect(loadedColors['textColor'], isA<Color>());
        print('‚úÖ –í—Å–µ –∑–Ω–∞—á–µ–Ω–∏—è —è–≤–ª—è—é—Ç—Å—è –æ–±—ä–µ–∫—Ç–∞–º–∏ Color');
        
        print('üéâ –¢–µ—Å—Ç "–ü–æ–ª–Ω—ã–π —Ü–∏–∫–ª —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∏ –∑–∞–≥—Ä—É–∑–∫–∏" –ø—Ä–æ–π–¥–µ–Ω —É—Å–ø–µ—à–Ω–æ!');
      });
    });
    
    // –í—ã–≤–æ–¥–∏–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ –≤—Å–µ—Ö —Ç–µ—Å—Ç–æ–≤
    print('üèÅ –í—Å–µ —Ç–µ—Å—Ç—ã LocalStorageService –∑–∞–≤–µ—Ä—à–µ–Ω—ã!');
  });
} 