// ignore_for_file: avoid_print

import 'package:flutter_test/flutter_test.dart';
import 'package:shared_preferences/shared_preferences.dart';

void main() {
  TestWidgetsFlutterBinding.ensureInitialized();

  group('SharedPreferences Tests', () {
    test('–¥–æ–ª–∂–µ–Ω —Å–æ—Ö—Ä–∞–Ω—è—Ç—å –∏ —á–∏—Ç–∞—Ç—å –¥–∞–Ω–Ω—ã–µ', () async {
      print('üß™ –¢–µ—Å—Ç: –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∏ —á—Ç–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –≤ SharedPreferences');
      
      // –ü–æ–ª—É—á–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä SharedPreferences
      final prefs = await SharedPreferences.getInstance();
      print('‚úÖ SharedPreferences –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
      
      // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
      const testKey = 'test_key';
      const testValue = 'test_value';
      
      await prefs.setString(testKey, testValue);
      print('‚úÖ –î–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã: $testKey = $testValue');
      
      // –ß–∏—Ç–∞–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
      final readValue = prefs.getString(testKey);
      print('üìñ –ü—Ä–æ—á–∏—Ç–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ: $readValue');
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –¥–∞–Ω–Ω—ã–µ —Å–æ–≤–ø–∞–¥–∞—é—Ç
      expect(readValue, equals(testValue));
      print('‚úÖ –î–∞–Ω–Ω—ã–µ —Å–æ–≤–ø–∞–¥–∞—é—Ç!');
      
      // –û—á–∏—â–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
      await prefs.remove(testKey);
      print('üßπ –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ —É–¥–∞–ª–µ–Ω—ã');
      
      print('üéâ –¢–µ—Å—Ç –ø—Ä–æ–π–¥–µ–Ω —É—Å–ø–µ—à–Ω–æ!');
    });

    test('–¥–æ–ª–∂–µ–Ω —Å–æ—Ö—Ä–∞–Ω—è—Ç—å –∏ —á–∏—Ç–∞—Ç—å JSON –¥–∞–Ω–Ω—ã–µ', () async {
      print('üß™ –¢–µ—Å—Ç: –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∏ —á—Ç–µ–Ω–∏–µ JSON –¥–∞–Ω–Ω—ã—Ö');
      
      final prefs = await SharedPreferences.getInstance();
      
      // –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –≤ —Ñ–æ—Ä–º–∞—Ç–µ JSON
      const testKey = 'user_colors';
      const testData = '{"test@gmail.com":{"backgroundColor":"#FFFF0000","appBarColor":"#FF0000FF","textColor":"#FF00FF00"}}';
      
      // –°–æ—Ö—Ä–∞–Ω—è–µ–º JSON –¥–∞–Ω–Ω—ã–µ
      await prefs.setString(testKey, testData);
      print('‚úÖ JSON –¥–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã: $testData');
      
      // –ß–∏—Ç–∞–µ–º JSON –¥–∞–Ω–Ω—ã–µ
      final readData = prefs.getString(testKey);
      print('üìñ –ü—Ä–æ—á–∏—Ç–∞–Ω–Ω—ã–µ JSON –¥–∞–Ω–Ω—ã–µ: $readData');
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –¥–∞–Ω–Ω—ã–µ —Å–æ–≤–ø–∞–¥–∞—é—Ç
      expect(readData, equals(testData));
      print('‚úÖ JSON –¥–∞–Ω–Ω—ã–µ —Å–æ–≤–ø–∞–¥–∞—é—Ç!');
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –¥–∞–Ω–Ω—ã–µ —Å–æ–¥–µ—Ä–∂–∞—Ç –æ–∂–∏–¥–∞–µ–º—ã–µ –∫–ª—é—á–∏
      expect(readData, contains('test@gmail.com'));
      expect(readData, contains('backgroundColor'));
      expect(readData, contains('appBarColor'));
      expect(readData, contains('textColor'));
      print('‚úÖ –í—Å–µ –æ–∂–∏–¥–∞–µ–º—ã–µ –∫–ª—é—á–∏ –Ω–∞–π–¥–µ–Ω—ã –≤ JSON');
      
      // –û—á–∏—â–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
      await prefs.remove(testKey);
      print('üßπ JSON —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ —É–¥–∞–ª–µ–Ω—ã');
      
      print('üéâ JSON —Ç–µ—Å—Ç –ø—Ä–æ–π–¥–µ–Ω —É—Å–ø–µ—à–Ω–æ!');
    });

    test('–¥–æ–ª–∂–µ–Ω —Ä–∞–±–æ—Ç–∞—Ç—å —Å –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏', () async {
      print('üß™ –¢–µ—Å—Ç: –†–∞–±–æ—Ç–∞ —Å –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏');
      
      final prefs = await SharedPreferences.getInstance();
      
      // –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –ø–µ—Ä–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      const user1Data = '{"user1@gmail.com":{"backgroundColor":"#FFFF0000"}}';
      await prefs.setString('user_colors', user1Data);
      print('‚úÖ –î–∞–Ω–Ω—ã–µ –¥–ª—è user1 —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã');
      
      // –ß–∏—Ç–∞–µ–º –¥–∞–Ω–Ω—ã–µ
      var allData = prefs.getString('user_colors') ?? '{}';
      print('üìñ –¢–µ–∫—É—â–∏–µ –¥–∞–Ω–Ω—ã–µ: $allData');
      
      // –î–æ–±–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –≤—Ç–æ—Ä–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      const user2Data = '{"user1@gmail.com":{"backgroundColor":"#FFFF0000"},"user2@gmail.com":{"backgroundColor":"#FF00FF00"}}';
      await prefs.setString('user_colors', user2Data);
      print('‚úÖ –î–∞–Ω–Ω—ã–µ –¥–ª—è user2 –¥–æ–±–∞–≤–ª–µ–Ω—ã');
      
      // –ß–∏—Ç–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
      allData = prefs.getString('user_colors') ?? '{}';
      print('üìñ –û–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ: $allData');
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –¥–∞–Ω–Ω—ã–µ —Å–æ–¥–µ—Ä–∂–∞—Ç –æ–±–æ–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
      expect(allData, contains('user1@gmail.com'));
      expect(allData, contains('user2@gmail.com'));
      print('‚úÖ –î–∞–Ω–Ω—ã–µ —Å–æ–¥–µ—Ä–∂–∞—Ç –æ–±–æ–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π');
      
      // –û—á–∏—â–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
      await prefs.remove('user_colors');
      print('üßπ –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ —É–¥–∞–ª–µ–Ω—ã');
      
      print('üéâ –¢–µ—Å—Ç –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø—Ä–æ–π–¥–µ–Ω —É—Å–ø–µ—à–Ω–æ!');
    });
  });
  
  print('üèÅ –í—Å–µ —Ç–µ—Å—Ç—ã SharedPreferences –∑–∞–≤–µ—Ä—à–µ–Ω—ã!');
} 